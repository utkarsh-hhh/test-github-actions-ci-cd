# name: Python CI

# # Trigger the workflow on any push to the main branch or pull request
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Check out the code from the repository
#       - name: Check out code
#         uses: actions/checkout@v2

#       # Step 2: Set up Python environment
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.8'

#       # Step 3: Install dependencies
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       # Step 4: Run tests
#       - name: Run tests
#         run: pytest


name: Python CI/CD Pipeline

# Trigger the workflow on push to main or any pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    # Job to run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10'] # Test against multiple python versions

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests with pytest
      - name: Run tests
        run: pytest

  build-and-push-docker:
    # Job to build and push the Docker image
    runs-on: ubuntu-latest
    # This job depends on the 'test' job succeeding
    needs: test
    # Only run this job on a push to the main branch (not on pull requests)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      # Step 1: Check out code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      # This uses secrets you need to add to your repository settings
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Tags the image for Docker Hub
          # It uses your Docker Hub username (from secrets) and your repo name
          # e.g., your-username/your-repo-name:latest
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest